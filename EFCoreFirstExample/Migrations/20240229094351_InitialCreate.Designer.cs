// <auto-generated />
using System;
using EFCoreFirstExample;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFCoreFirstExample.Migrations
{
    [DbContext(typeof(EFCoreFirstExampleDBContext))]
    [Migration("20240229094351_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFCoreFirstExample.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProductId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<string>("ProductName")
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("ProductId");

                    b.ToTable("tbl_product");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("tbl_user");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Birthday")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("tbl_user_detail");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserOrder", b =>
                {
                    b.Property<int>("UserOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserOrderId"));

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TransactionStatus")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("UserOrderId");

                    b.HasIndex("UserId");

                    b.ToTable("tbl_user_order");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserOrderProduct", b =>
                {
                    b.Property<int>("UserOrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserOrderProductId"));

                    b.Property<decimal>("Discount")
                        .HasColumnType("numeric");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int?>("ProductId")
                        .HasColumnType("integer");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("UserOrderProductId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserOrderId");

                    b.ToTable("tbl_user_order_product");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserDetail", b =>
                {
                    b.HasOne("EFCoreFirstExample.Entity.User", "User")
                        .WithOne("UserDetail")
                        .HasForeignKey("EFCoreFirstExample.Entity.UserDetail", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserOrder", b =>
                {
                    b.HasOne("EFCoreFirstExample.Entity.User", "User")
                        .WithMany("UserOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserOrderProduct", b =>
                {
                    b.HasOne("EFCoreFirstExample.Entity.Product", null)
                        .WithMany("UserOrderProducts")
                        .HasForeignKey("ProductId");

                    b.HasOne("EFCoreFirstExample.Entity.UserOrder", "UserOrder")
                        .WithMany("UserOrderProducts")
                        .HasForeignKey("UserOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserOrder");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.Product", b =>
                {
                    b.Navigation("UserOrderProducts");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.User", b =>
                {
                    b.Navigation("UserDetail");

                    b.Navigation("UserOrders");
                });

            modelBuilder.Entity("EFCoreFirstExample.Entity.UserOrder", b =>
                {
                    b.Navigation("UserOrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
